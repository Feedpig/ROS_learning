<!-- <launch deprecated= "此文件已经过时，不建议使用"> -->
<launch>
    <!-- 启动的节点-->
    <!--节点关闭后（×掉后自动重启-雷达节点关闭后自动重启） respawn = "True" >>> 自动重启-->
    <!-- <node pkg = "turtlesim" type = "turtlesim_node" name = "my_turtle" output="screen" respawn= "true"/> -->
    <!-- required = "true">>>节点推出后（×掉后），关闭整个系统（同等于CTRL+C） -->
    <!-- ns = "hello">>> 设置节点的命名空间（在原有的name前面加入前缀  用rosnode list 查看） >>>/baby/my_turtle-->
   
    <!-- param 使用：向参数服务器设置参数 -->
    <!-- ***param****格式1： launch下，node外 -->
    <param name = "param_A" type = "int" value = "100" />
    
    <!-- rosparam使用:操作参数服务器数据 -->
    <!-- ***rosparam***格式1 launch下 node外 -->
    <!-- 加载参数 -->
    <rosparam command = "load" file = "$(find launch_basic)/launch/params.yaml" />
    <!-- 导出参数 -->
    <!-- <rosparam command = "dump" file = "$(find launch_basic)/launch/params_out.yaml" /> -->


    <node pkg = "turtlesim" type = "turtlesim_node" name = "my_turtle" output="screen" ns="baby" >
        <remap from ="/baby/turtle1/cmd_vel" to ="/cmd_vel" />
    <!-- ***param*** 格式2：node下 -->
        <param name = "param_b" type = "double" value = "3.14" />
    <!-- ***rosparam*** 格式2 node下    -->
        <rosparam command = "load" file = "$(find launch_basic)/launch/params.yaml" />
    </node>
    
    
    <!-- 键盘控制节点-->
    <node pkg = "turtlesim" type = "turtle_teleop_key" name = "my_key" output="screen" />
</launch>

